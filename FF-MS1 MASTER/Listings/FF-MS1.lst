C51 COMPILER V9.59.0.0   FF_MS1                                                            05/15/2021 16:25:21 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE FF_MS1
OBJECT MODULE PLACED IN .\Objects\FF-MS1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE FF-MS1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\FF
                    --MS1.lst) TABS(2) OBJECT(.\Objects\FF-MS1.obj)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // TP5.c
   3          //-----------------------------------------------------------------------------
   4          // AUTH: 
   5          // DATE: 
   6          //
   7          // Target: C8051F02x
   8          // Tool chain: KEIL Microvision 4
   9          //
  10          //-----------------------------------------------------------------------------
  11          #include <C8051F020.h>
  12          #include "c8051F020_SFR16.h"
  13          #include "FF-MS1_Config.h"
  14          #include "FF-MS1_Divers.h"
  15          #include <stdlib.h>
  16          #include <string.h>
  17          
  18          #define Reset_Timer3Overflow TMR3CN &= 0x04
  19          #define Disable_Timer3 TMR3CN = 0x00
  20          
  21          sbit LED = P1^6;
  22          sbit Button = P3^7;
  23          sbit SLAVE_NSS = P0^7;
  24          char i = 0;
  25          char SPIcounter = 0;
  26          char SPIlength = 0;
  27          char xdata message[10];
  28          char* ptr_message = &message;
  29          char xdata sendBuffer[14];
  30          char* ptr_sendBuffer = &sendBuffer;
  31          // Prototypes de Fonctions
  32          
  33          void Transfert(char c){
  34   1        for(i=0;i < 125;i++);
  35   1        SLAVE_NSS = 0;
  36   1        for(i=0;i < 10;i++);
  37   1        SPI0DAT = c;
  38   1      }
  39          
  40          void Codage (char SPIlength, char* ptr_sendBuffer, char* ptr_message){
  41   1        *ptr_sendBuffer++ = 'B';
  42   1        *ptr_sendBuffer++ = 'R';
  43   1        while (i < SPIlength){
  44   2          *ptr_sendBuffer++ = *ptr_message++;
  45   2          i++;
  46   2        }
  47   1        while (i < (10)){
  48   2          *ptr_sendBuffer++ = '&';
  49   2          i++;
  50   2        }
  51   1        //TODO : Ajout des caractères vides pour remplir
  52   1        *ptr_sendBuffer++ = 'U';
  53   1        *ptr_sendBuffer++ = 'H';
  54   1        i = 0;
C51 COMPILER V9.59.0.0   FF_MS1                                                            05/15/2021 16:25:21 PAGE 2   

  55   1      }
  56          
  57          //-----------------------------------------------------------------------------
  58          //-----------------------------------------------------------------------------
  59          // MAIN Routine
  60          //-----------------------------------------------------------------------------
  61          void main (void) {
  62   1        
  63   1          Init_Device();  // Appel des configurations globales
  64   1          
  65   1      // Début Insertion Code Configuration des périphériques ***********************
  66   1          EA = 1;
  67   1          LED = 0;
  68   1          SLAVE_NSS = 1;
  69   1        
  70   1      // Fin Code Initialisations ***************************************************
  71   1        
  72   1      // Début Insertion Code Phase Démarrage *************************************** 
  73   1            
  74   1            
  75   1      // Fin Code phase Démarrage ***************************************************
  76   1        
  77   1        
  78   1        while(1)
  79   1        {
  80   2          //Mettre le message à envoyer dans le buffer message, qui n'accepte que 10 char max.
  81   2          message[0] = 'E';
  82   2          message[1] = 'A';
  83   2          SPIlength = 2; //Spécifiez la longueur du message
  84   2          Codage(SPIlength,ptr_sendBuffer,ptr_message);
  85   2          
  86   2        }
  87   1      }
  88          
  89          //-----------------------------------------------------------------------------
  90          //-----------------------------------------------------------------------------
  91          // Fonctions de configuration des divers périphériques
  92          //-----------------------------------------------------------------------------
  93          // Insérez vos fonctions de configuration ici
  94          
  95          //-----------------------------------------------------------------------------
  96          //-----------------------------------------------------------------------------
  97          // Fonctions d'interruptions
  98          //-----------------------------------------------------------------------------
  99          // Insérez vos fonctions d'interruption ici
 100          
 101          void ISR_SPI0() interrupt 6{
 102   1        SPIF = 0;
 103   1        SLAVE_NSS = 1;
 104   1      }
 105          
 106          void ISR_TMR3() interrupt 14{
 107   1        Reset_Timer3Overflow;
 108   1        if (SPIcounter > 13){
 109   2          SPIcounter = 0;
 110   2        }
 111   1        else {
 112   2          Transfert(sendBuffer[SPIcounter]);
 113   2          SPIcounter++;
 114   2        }
 115   1      }

C51 COMPILER V9.59.0.0   FF_MS1                                                            05/15/2021 16:25:21 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    365    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     24    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
