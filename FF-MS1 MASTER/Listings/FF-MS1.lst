C51 COMPILER V9.60.0.0   FF_MS1                                                            05/05/2021 10:54:58 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE FF_MS1
OBJECT MODULE PLACED IN .\Objects\FF-MS1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE FF-MS1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\FF
                    --MS1.lst) TABS(2) OBJECT(.\Objects\FF-MS1.obj)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // TP5.c
   3          //-----------------------------------------------------------------------------
   4          // AUTH: 
   5          // DATE: 
   6          //
   7          // Target: C8051F02x
   8          // Tool chain: KEIL Microvision 4
   9          //
  10          //-----------------------------------------------------------------------------
  11          #include <C8051F020.h>
  12          #include "c8051F020_SFR16.h"
  13          #include "FF-MS1_Config.h"
  14          #include "FF-MS1_Divers.h"
  15          #include <stdlib.h>
  16          
  17          #define Reset_Timer3Overflow TMR3CN &= 0x04
  18          #define Disable_Timer3 TMR3CN = 0x00
  19          
  20          sbit LED = P1^6;
  21          sbit Button = P3^7;
  22          sbit SLAVE_NSS = P0^7;
  23          int i = 0;
  24          int SPIcounter = 0;
  25          int SPIlength = 0;
  26          char xdata buffer[10];
  27          // Prototypes de Fonctions
  28          
  29          void Transfert(char c){
  30   1        for(i=0;i < 125;i++);
  31   1        SLAVE_NSS = 0;
  32   1        for(i=0;i < 10;i++);
  33   1        SPI0DAT = c;
  34   1      }
  35          
  36          //-----------------------------------------------------------------------------
  37          //-----------------------------------------------------------------------------
  38          // MAIN Routine
  39          //-----------------------------------------------------------------------------
  40          void main (void) {
  41   1        
  42   1          Init_Device();  // Appel des configurations globales
  43   1          
  44   1      // Début Insertion Code Configuration des périphériques ***********************
  45   1          EA = 1;
  46   1          LED = 0;
  47   1          SLAVE_NSS = 1;
  48   1        
  49   1      // Fin Code Initialisations ***************************************************
  50   1        
  51   1      // Début Insertion Code Phase Démarrage *************************************** 
  52   1            
  53   1            
  54   1      // Fin Code phase Démarrage ***************************************************
C51 COMPILER V9.60.0.0   FF_MS1                                                            05/05/2021 10:54:58 PAGE 2   

  55   1        
  56   1        
  57   1        while(1)
  58   1        {
  59   2          buffer[0] = 'B';
  60   2          buffer[1] = 'R';
  61   2          buffer[2] = 'E';
  62   2          buffer[3] = 'A';
  63   2          buffer[4] = 'U';
  64   2          buffer[5] = 'H';
  65   2          SPIlength = 2;
  66   2        }
  67   1      }
  68          
  69          //-----------------------------------------------------------------------------
  70          //-----------------------------------------------------------------------------
  71          // Fonctions de configuration des divers périphériques
  72          //-----------------------------------------------------------------------------
  73          // Insérez vos fonctions de configuration ici
  74          
  75          //-----------------------------------------------------------------------------
  76          //-----------------------------------------------------------------------------
  77          // Fonctions d'interruptions
  78          //-----------------------------------------------------------------------------
  79          // Insérez vos fonctions d'interruption ici
  80          
  81          void ISR_SPI0() interrupt 6{
  82   1        SPIF = 0;
  83   1        SLAVE_NSS = 1;
  84   1      }
  85          
  86          void ISR_TMR3() interrupt 14{
  87   1        Reset_Timer3Overflow;
  88   1        if (SPIcounter > SPIlength+3){
  89   2          SPIcounter = 0;
  90   2        }
  91   1        else {
  92   2          Transfert(buffer[SPIcounter]);
  93   2          SPIcounter++;
  94   2        }
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    183    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     10    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
